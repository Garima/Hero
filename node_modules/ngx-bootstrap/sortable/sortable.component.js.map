{"version":3,"file":"sortable.component.js","sourceRoot":"","sources":["../../.tmp/sortable/sortable.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component, Input, Output, EventEmitter, forwardRef, TemplateRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { DraggableItem } from './draggable-item';\r\nimport { DraggableItemService } from './draggable-item.service';\r\n\r\n/* tslint:disable */\r\n@Component({\r\n  selector: 'bs-sortable',\r\n  exportAs: 'bs-sortable',\r\n  template: `\r\n<div\r\n    [ngClass]=\"wrapperClass\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    (dragover)=\"cancelEvent($event)\"\r\n    (dragenter)=\"cancelEvent($event)\"\r\n    (drop)=\"resetActiveItem($event)\"\r\n    (mouseleave)=\"resetActiveItem($event)\">\r\n  <div\r\n        *ngIf=\"showPlaceholder\"\r\n        [ngClass]=\"placeholderClass\"\r\n        [ngStyle]=\"placeholderStyle\"\r\n        (dragover)=\"onItemDragover($event, 0)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n    >{{placeholderItem}}</div>\r\n    <div\r\n        *ngFor=\"let item of items; let i=index;\"\r\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\r\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"onItemDragstart($event, item, i)\"\r\n        (dragend)=\"resetActiveItem($event)\"\r\n        (dragover)=\"onItemDragover($event, i)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n    ><template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\r\n  [ngOutletContext]=\"{item:item, index: i}\"></template></div>\r\n</div>\r\n\r\n<template #defItemTemplate let-item=\"item\">{{item.value}}</template>  \r\n`,\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SortableComponent),\r\n    multi: true\r\n  }],\r\n})\r\n/* tslint:enable */\r\nexport class SortableComponent implements ControlValueAccessor {\r\n  private static globalZoneIndex: number = 0;\r\n\r\n  /** field name if input array consists of objects */\r\n  @Input() public fieldName: string;\r\n\r\n  /** class name for items wrapper */\r\n  @Input() public wrapperClass: string = '';\r\n\r\n  /** style object for items wrapper */\r\n  @Input() public wrapperStyle: {[key: string]: string} = {};\r\n\r\n  /** class name for item */\r\n  @Input() public itemClass: string = '';\r\n\r\n  /** style object for item */\r\n  @Input() public itemStyle: {[key: string]: string} = {};\r\n\r\n  /** class name for active item */\r\n  @Input() public itemActiveClass: string = '';\r\n\r\n  /** style object for active item */\r\n  @Input() public itemActiveStyle: {[key: string]: string} = {};\r\n\r\n  /** class name for placeholder */\r\n  @Input() public placeholderClass: string = '';\r\n\r\n  /** style object for placeholder */\r\n  @Input() public placeholderStyle: {[key: string]: string} = {};\r\n\r\n  /** placeholder item which will be shown if collection is empty */\r\n  @Input() public placeholderItem: string = '';\r\n\r\n  /** used to specify a custom item template. Template variables: item and index; */\r\n  @Input() public itemTemplate: TemplateRef<any>;\r\n\r\n  /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\r\n   *  Returns new items collection as a payload.\r\n   */\r\n  @Output() public onChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n  public showPlaceholder: boolean = false;\r\n  public activeItem: number = -1;\r\n\r\n  public get items(): SortableItem[] {\r\n    return this._items;\r\n  }\r\n\r\n  public set items(value: SortableItem[]) {\r\n    this._items = value;\r\n    let out = this.items.map((x: SortableItem) => x.initData);\r\n    this.onChanged(out);\r\n    this.onChange.emit(out);\r\n  }\r\n\r\n  public onTouched: any = Function.prototype;\r\n  public onChanged: any = Function.prototype;\r\n\r\n  private transfer: DraggableItemService;\r\n  private currentZoneIndex: number;\r\n  private _items: SortableItem[];\r\n\r\n  public constructor(transfer: DraggableItemService) {\r\n    this.transfer = transfer;\r\n    this.currentZoneIndex = SortableComponent.globalZoneIndex++;\r\n    this.transfer.onCaptureItem()\r\n      .subscribe((item: DraggableItem) => this.onDrop(item));\r\n  }\r\n\r\n  public onItemDragstart(event: DragEvent, item: SortableItem, i: number): void {\r\n    this.initDragstartEvent(event);\r\n    this.onTouched();\r\n    this.transfer.dragStart({\r\n      event,\r\n      item,\r\n      i,\r\n      initialIndex: i,\r\n      lastZoneIndex: this.currentZoneIndex,\r\n      overZoneIndex: this.currentZoneIndex\r\n    });\r\n  }\r\n\r\n  public onItemDragover(event: DragEvent, i: number): void {\r\n    if (!this.transfer.getItem()) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let dragItem = this.transfer.captureItem(this.currentZoneIndex, this.items.length);\r\n    let newArray: any[] = [];\r\n    if (!this.items.length) {\r\n      newArray = [dragItem.item];\r\n    } else if (dragItem.i > i) {\r\n      newArray = [\r\n        ...this.items.slice(0, i),\r\n        dragItem.item,\r\n        ...this.items.slice(i, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1)\r\n      ];\r\n    } else { // this.draggedItem.i < i\r\n      newArray = [\r\n        ...this.items.slice(0, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1, i + 1),\r\n        dragItem.item,\r\n        ...this.items.slice(i + 1)\r\n      ];\r\n    }\r\n    this.items = newArray;\r\n    dragItem.i = i;\r\n    this.activeItem = i;\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  public cancelEvent(event: DragEvent): void {\r\n    if (!this.transfer.getItem() || !event) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  public onDrop(item: DraggableItem): void {\r\n    if (item &&\r\n      item.overZoneIndex !== this.currentZoneIndex &&\r\n      item.lastZoneIndex === this.currentZoneIndex\r\n    ) {\r\n      this.items = this.items.filter((x: SortableItem, i: number) => i !== item.i);\r\n      this.updatePlaceholderState();\r\n    }\r\n    this.resetActiveItem(undefined);\r\n  }\r\n\r\n  public resetActiveItem(event: DragEvent): void {\r\n    this.cancelEvent(event);\r\n    this.activeItem = -1;\r\n  }\r\n\r\n  public registerOnChange(callback: (_: any) => void): void {\r\n    this.onChanged = callback;\r\n  }\r\n\r\n  public registerOnTouched(callback: () => void): void {\r\n    this.onTouched = callback;\r\n  }\r\n\r\n  public writeValue(value: any[]): void {\r\n    if (value) {\r\n      this.items = value.map((x: any, i: number) => ({\r\n        id: i,\r\n        initData: x,\r\n        value: this.fieldName ? x[this.fieldName] : x\r\n      }));\r\n    } else {\r\n      this.items = [];\r\n    }\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  public updatePlaceholderState(): void {\r\n    this.showPlaceholder = !this._items.length;\r\n  }\r\n\r\n  public getItemStyle(isActive: boolean): {} {\r\n    return isActive\r\n      ? Object.assign({}, this.itemStyle, this.itemActiveStyle)\r\n      : this.itemStyle;\r\n  }\r\n\r\n  private initDragstartEvent(event: DragEvent): void {\r\n    // it is necessary for mozilla\r\n    // data type should be 'Text' instead of 'text/plain' to keep compatibility\r\n    // with IE\r\n    event.dataTransfer.setData('Text', 'placeholder');\r\n  }\r\n}\r\n\r\nexport declare interface SortableItem {\r\n  id: number;\r\n  value: string;\r\n  initData: any;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}