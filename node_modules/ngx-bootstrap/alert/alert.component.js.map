{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../.tmp/alert/alert.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAkB/C;IAkBE,wBAAmB,OAAoB;QAAvC,iBAKC;QAtBD,yHAAyH;QACzG,SAAI,GAAW,SAAS,CAAC;QACzC,gDAAgD;QAEhC,gBAAW,GAAY,KAAK,CAAC;QAI7C,oHAAoH;QACnG,YAAO,GAAiC,IAAI,YAAY,EAAkB,CAAC;QAC5F,mFAAmF;QAClE,aAAQ,GAAiC,IAAI,YAAY,EAAkB,CAAC;QAEtF,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAW,EAAE,CAAC;QACrB,sBAAiB,GAA0B,IAAI,YAAY,EAAW,CAAC;QAG5E,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,WAAoB;YACpD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,GAAG,mBAAmB,GAAG,EAAE,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,wEAAwE;YACxE,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,EAC3B,QAAQ,CAAC,IAAI,CAAC,gBAA0B,EAAE,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAED,6EAA6E;IAC7E,gDAAgD;IAChD;;OAEG;IACI,8BAAK,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IA5CQ;QAAR,KAAK,EAAE;;gDAAiC;IAGhC;QADR,QAAQ,EAAE;QACV,KAAK,EAAE;;uDAAqC;IAEpC;QAAR,KAAK,EAAE;;4DAA0C;IAGxC;QAAT,MAAM,EAAE;kCAAiB,YAAY;mDAAsD;IAElF;QAAT,MAAM,EAAE;kCAAkB,YAAY;oDAAsD;IAZlF,cAAc;QAhB1B,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,gbAYT;SACF,CAAC;yCAmB4B,WAAW;OAlB5B,cAAc,CA+C1B;IAAD,qBAAC;CAAA,AA/CD,IA+CC;SA/CY,cAAc","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AlertConfig } from './alert.config';\r\nimport { OnChange } from '../utils/decorators';\r\n\r\n@Component({\r\n  selector: 'alert,ngx-alert',\r\n  template: `\r\n<template [ngIf]=\"!isClosed\">\r\n  <div [class]=\"'alert alert-' + type\" role=\"alert\" [ngClass]=\"classes\">\r\n    <template [ngIf]=\"dismissible\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        <span class=\"sr-only\">Close</span>\r\n      </button>\r\n    </template>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</template>\r\n  `\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  /** Alert type. Provides one of four bootstrap supported contextual classes: `success`, `info`, `warning` and `danger` */\r\n  @Input() public type: string = 'warning';\r\n  /** If set, displays an inline \"Close\" button */\r\n  @OnChange()\r\n  @Input() public dismissible: boolean = false;\r\n  /** Number in milliseconds, after which alert will be closed */\r\n  @Input() public dismissOnTimeout: number | string;\r\n\r\n  /** This event fires immediately after close instance method is called, $event is an instance of Alert component. */\r\n  @Output() public onClose: EventEmitter<AlertComponent> = new EventEmitter<AlertComponent>();\r\n  /** This event fires when alert closed, $event is an instance of Alert component */\r\n  @Output() public onClosed: EventEmitter<AlertComponent> = new EventEmitter<AlertComponent>();\r\n\r\n  public isClosed: boolean = false;\r\n  public classes: string = '';\r\n  public dismissibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public constructor(_config: AlertConfig) {\r\n    Object.assign(this, _config);\r\n    this.dismissibleChange.subscribe((dismissible: boolean) => {\r\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.dismissOnTimeout) {\r\n      // if dismissOnTimeout used as attr without binding, it will be a string\r\n      setTimeout(() => this.close(),\r\n        parseInt(this.dismissOnTimeout as string, 10));\r\n    }\r\n  }\r\n\r\n  // todo: animation ` If the .fade and .in classes are present on the element,\r\n  // the alert will fade out before it is removed`\r\n  /**\r\n   * Closes an alert by removing it from the DOM.\r\n   */\r\n  public close(): void {\r\n    if (this.isClosed) {\r\n      return;\r\n    }\r\n\r\n    this.onClose.emit(this);\r\n    this.isClosed = true;\r\n    this.onClosed.emit(this);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}