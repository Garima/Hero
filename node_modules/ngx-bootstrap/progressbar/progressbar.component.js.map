{"version":3,"file":"progressbar.component.js","sourceRoot":"","sources":["../../.tmp/progressbar/progressbar.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAoBjC;IAkBE,8BAAmB,MAAyB;QANrC,cAAS,GAAY,KAAK,CAAC;QAOhC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAZQ,sBAAW,uCAAK;QADzB,0HAA0H;aACjH,UAAiB,KAAqB;YAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAAA,CAAC;IAGF,sBAAW,uCAAK;aAAhB;YACE,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;;;OAAA;IAdQ;QAAR,KAAK,EAAE;;yDAAwB;IAEvB;QAAR,KAAK,EAAE;;qDAAmB;IAElB;QAAR,KAAK,EAAE;;sDAAoB;IAEnB;QAAR,KAAK,EAAE;;;qDAGP;IAXU,oBAAoB;QAlBhC,SAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,oZAST;YACD,MAAM,EAAE,CAAC,8CAIR,CAAC;SACH,CAAC;yCAmB2B,iBAAiB;OAlBjC,oBAAoB,CAqBhC;IAAD,2BAAC;CAAA,AArBD,IAqBC;SArBY,oBAAoB","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { ProgressbarConfig } from './progressbar.config';\r\nimport { isBs3 } from '../utils';\r\n\r\n@Component({\r\n  selector: 'progressbar',\r\n  template: `\r\n    <div progress [animate]=\"animate\" [max]=\"max\" [style.width]=\"!isBs3 ? '100%' : 'auto'\">\r\n      <bar [type]=\"type\" [value]=\"_value\" *ngIf=\"!isStacked\">\r\n          <ng-content></ng-content>\r\n      </bar>\r\n      <template [ngIf]=\"isStacked\">\r\n        <bar *ngFor=\"let item of _value\" [type]=\"item.type\" [value]=\"item.value\">{{item.label}}</bar>\r\n      </template>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class ProgressbarComponent {\r\n  /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\r\n  @Input() public animate:boolean;\r\n  /** maximum total value of progress element */\r\n  @Input() public max:number;\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() public type:string;\r\n  /** current value of progress bar. Could be a number or array of objects like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"} */\r\n  @Input() public set value(value: number | any[]) {\r\n    this.isStacked = Array.isArray(value);\r\n    this._value = value;\r\n  };\r\n  public isStacked: boolean = false;\r\n  public _value: number | any[];\r\n  public get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  public constructor(config: ProgressbarConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}