{"version":3,"file":"slide.component.js","sourceRoot":"","sources":["../../.tmp/carousel/slide.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAa,KAAK,EAAU,MAAM,eAAe,CAAC;AAEjF,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAUzD;IAcE,wBAAmB,QAA0B;QAR7C,+CAA+C;QAGxC,aAAQ,GAAW,IAAI,CAAC;QAM7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,8EAA8E;IACvE,iCAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,kFAAkF;IAC3E,oCAAW,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAtBQ;QADR,WAAW,CAAC,cAAc,CAAC;QAC3B,KAAK,EAAE;;kDAAuB;IAK/B;QAFC,WAAW,CAAC,YAAY,CAAC;QACzB,WAAW,CAAC,qBAAqB,CAAC;;oDACJ;IATpB,cAAc;QAR1B,SAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,uGAIT;SACF,CAAC;yCAe4B,iBAAiB;OAdlC,cAAc,CA2B1B;IAAD,qBAAC;CAAA,AA3BD,IA2BC;SA3BY,cAAc","sourcesContent":["import { Component, HostBinding, OnDestroy, Input, OnInit } from '@angular/core';\r\n\r\nimport { CarouselComponent } from './carousel.component';\r\n\r\n@Component({\r\n  selector: 'slide',\r\n  template: `\r\n    <div [class.active]=\"active\" class=\"item\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class SlideComponent implements OnInit, OnDestroy {\r\n\r\n  /** Is current slide active */\r\n  @HostBinding('class.active')\r\n  @Input() public active:boolean;\r\n\r\n  /** Wraps element by appropriate CSS classes */\r\n  @HostBinding('class.item')\r\n  @HostBinding('class.carousel-item')\r\n  public addClass:boolean = true;\r\n\r\n  /** Link to Parent(container-collection) component */\r\n  protected carousel:CarouselComponent;\r\n\r\n  public constructor(carousel:CarouselComponent) {\r\n    this.carousel = carousel;\r\n  }\r\n\r\n  /** Fires changes in container collection after adding a new slide instance */\r\n  public ngOnInit():void {\r\n    this.carousel.addSlide(this);\r\n  }\r\n\r\n  /** Fires changes in container collection after removing of this slide instance */\r\n  public ngOnDestroy():void {\r\n    this.carousel.removeSlide(this);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}