{"version":3,"file":"timepicker.reducer.js","sourceRoot":"","sources":["../../../.tmp/timepicker/reducer/timepicker.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action } from '../../mini-ngrx/index';\r\nimport {\r\n  canChangeHours,\r\n  canChangeMinutes,\r\n  canChangeSeconds,\r\n  canChangeValue,\r\n  timepickerControls\r\n} from '../timepicker-controls.util';\r\nimport { TimepickerConfig } from '../timepicker.config';\r\nimport { TimepickerComponentState, TimepickerControls } from '../timepicker.models';\r\nimport { changeTime, setTime } from '../timepicker.utils';\r\nimport { TimepickerActions } from './timepicker.actions';\r\n\r\nexport class TimepickerState {\r\n  value: Date;\r\n  config: TimepickerComponentState;\r\n  controls: TimepickerControls;\r\n}\r\n\r\nexport const initialState: TimepickerState = {\r\n  value: null,\r\n  config: new TimepickerConfig(),\r\n  controls: {\r\n    canIncrementHours: true,\r\n    canIncrementMinutes: true,\r\n    canIncrementSeconds: true,\r\n\r\n    canDecrementHours: true,\r\n    canDecrementMinutes: true,\r\n    canDecrementSeconds: true\r\n  }\r\n};\r\n\r\nexport function timepickerReducer(state = initialState, action: Action) {\r\n  switch (action.type) {\r\n    case(TimepickerActions.WRITE_VALUE): {\r\n      return Object.assign({}, state, {value: action.payload});\r\n    }\r\n\r\n    case (TimepickerActions.CHANGE_HOURS): {\r\n      if (!canChangeValue(state.config, action.payload) ||\r\n        !canChangeHours(action.payload, state.controls)) {\r\n        return state;\r\n      }\r\n\r\n      const _newTime = changeTime(state.value, {hour: action.payload.step});\r\n\r\n      return Object.assign({}, state, {value: _newTime});\r\n    }\r\n\r\n    case (TimepickerActions.CHANGE_MINUTES): {\r\n      if (!canChangeValue(state.config, action.payload) ||\r\n        !canChangeMinutes(action.payload, state.controls)) {\r\n        return state;\r\n      }\r\n\r\n      const _newTime = changeTime(state.value, {minute: action.payload.step});\r\n\r\n      return Object.assign({}, state, {value: _newTime});\r\n    }\r\n\r\n    case (TimepickerActions.CHANGE_SECONDS): {\r\n      if (!canChangeValue(state.config, action.payload) ||\r\n        !canChangeSeconds(action.payload, state.controls)) {\r\n        return state;\r\n      }\r\n\r\n      const _newTime = changeTime(state.value, {seconds: action.payload.step});\r\n\r\n      return Object.assign({}, state, {value: _newTime});\r\n    }\r\n\r\n    case (TimepickerActions.SET_TIME_UNIT): {\r\n      if (!canChangeValue(state.config)) {\r\n        return state;\r\n      }\r\n\r\n      const _newTime = setTime(state.value, action.payload);\r\n\r\n      return Object.assign({}, state, {value: _newTime});\r\n    }\r\n\r\n    case (TimepickerActions.UPDATE_CONTROLS): {\r\n      const _newControlsState = timepickerControls(state.value, action.payload);\r\n      const _newState: TimepickerState = {\r\n        value: state.value,\r\n        config: action.payload,\r\n        controls: _newControlsState\r\n      };\r\n\r\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\r\n        _newState.value = new Date(state.value);\r\n      }\r\n\r\n      return Object.assign({}, state, _newState);\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}