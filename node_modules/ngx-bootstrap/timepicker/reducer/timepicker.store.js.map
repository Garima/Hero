{"version":3,"file":"timepicker.store.js","sourceRoot":"","sources":["../../../.tmp/timepicker/reducer/timepicker.store.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAmB,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACxF,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAGvD,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;AAGxD;IAAqC,mCAA0B;IAC7D;QAAA,iBAIC;QAHC,IAAM,WAAW,GAAG,IAAI,eAAe,CAAS,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAC,CAAC;QACvF,IAAM,KAAK,GAAG,IAAI,SAAS,CAAkB,YAAY,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAC3F,QAAA,kBAAM,WAAW,EAAE,iBAAiB,EAAE,KAAK,CAAC,SAAC;;IAC/C,CAAC;IALU,eAAe;QAD3B,UAAU,EAAE;;OACA,eAAe,CAM3B;IAAD,sBAAC;CAAA,AAND,CAAqC,SAAS,GAM7C;SANY,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { timepickerReducer, TimepickerState, initialState } from './timepicker.reducer';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\nimport { Action } from '../../mini-ngrx/index';\r\nimport { MiniStore } from '../../mini-ngrx/store.class';\r\nimport { MiniState } from '../../mini-ngrx/state.class';\r\n\r\n@Injectable()\r\nexport class TimepickerStore extends MiniStore<TimepickerState> {\r\n  constructor() {\r\n    const _dispatcher = new BehaviorSubject<Action>({type: '[mini-ngrx] dispatcher init'});\r\n    const state = new MiniState<TimepickerState>(initialState, _dispatcher, timepickerReducer);\r\n    super(_dispatcher, timepickerReducer, state);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}