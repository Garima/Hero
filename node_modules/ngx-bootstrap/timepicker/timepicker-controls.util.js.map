{"version":3,"file":"timepicker-controls.util.js","sourceRoot":"","sources":["../../.tmp/timepicker/timepicker-controls.util.ts"],"names":[],"mappings":"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","sourcesContent":["import { changeTime, setTime } from './timepicker.utils';\r\nimport { TimeChangeEvent, TimepickerComponentState, TimepickerControls } from './timepicker.models';\r\n\r\nexport function canChangeValue(state: TimepickerComponentState, event?: TimeChangeEvent): boolean {\r\n  if (state.readonlyInput) {\r\n    return false;\r\n  }\r\n\r\n  if (event) {\r\n    if (event.source === 'wheel' && !state.mousewheel) {\r\n      return false;\r\n    }\r\n\r\n    if (event.source === 'key' && !state.arrowkeys) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeHours(event: TimeChangeEvent, controls: TimepickerControls): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step > 0 && !controls.canIncrementHours) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step < 0 && !controls.canDecrementHours) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeMinutes(event: TimeChangeEvent, controls: TimepickerControls): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementMinutes) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementMinutes) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeSeconds(event: TimeChangeEvent, controls: TimepickerControls): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementSeconds) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementSeconds) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function getControlsValue(state: TimepickerComponentState): TimepickerComponentState {\r\n  const {\r\n    hourStep, minuteStep, secondsStep,\r\n    readonlyInput, mousewheel, arrowkeys,\r\n    showSpinners, showMeridian, showSeconds,\r\n    meridians, min, max\r\n  } = state;\r\n  return {\r\n    hourStep, minuteStep, secondsStep,\r\n    readonlyInput, mousewheel, arrowkeys,\r\n    showSpinners, showMeridian, showSeconds,\r\n    meridians, min, max\r\n  };\r\n}\r\n\r\nexport function timepickerControls(value: Date, state: TimepickerComponentState): TimepickerControls {\r\n  const {min, max, hourStep, minuteStep, secondsStep, showSeconds} = state;\r\n  const res = {\r\n    canIncrementHours: true,\r\n    canIncrementMinutes: true,\r\n    canIncrementSeconds: true,\r\n\r\n    canDecrementHours: true,\r\n    canDecrementMinutes: true,\r\n    canDecrementSeconds: true\r\n  } as TimepickerControls;\r\n\r\n  if (!value) {\r\n    return res;\r\n  }\r\n\r\n// compare dates\r\n  if (max) {\r\n    const _newHour = changeTime(value, { hour:  hourStep });\r\n    res.canIncrementHours = max > _newHour;\r\n\r\n    if (!res.canIncrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: minuteStep });\r\n      res.canIncrementMinutes =  showSeconds ? max > _newMinutes : max >= _newMinutes ;\r\n    }\r\n\r\n    if (!res.canIncrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\r\n      res.canIncrementSeconds = max >= _newSeconds;\r\n    }\r\n  }\r\n\r\n  if (min) {\r\n    const _newHour = changeTime(value, { hour:  -hourStep });\r\n    res.canDecrementHours = min < _newHour;\r\n\r\n    if (!res.canDecrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\r\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\r\n    }\r\n\r\n    if (!res.canDecrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\r\n      res.canDecrementSeconds = min <= _newSeconds;\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}