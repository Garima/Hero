{"version":3,"file":"bs-dropdown-container.component.js","sourceRoot":"","sources":["../../.tmp/dropdown/bs-dropdown-container.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAa,QAAQ,EAAE,MAAM,eAAe,CAAC;AACvH,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAetD;IASE,sCAAoB,MAAuB,EAAU,EAAqB,EAAU,SAAmB,EAAE,QAAoB;QAA7H,iBAkBC;QAlBmB,WAAM,GAAN,MAAM,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAU;QARvG,WAAM,GAAG,KAAK,CAAC;QASb,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAc;YAChE,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBACvD,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBACvD,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;oBACzD,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;gBACzD,CAAC;gBACD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxD,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAC;gBAC7E,CAAC;YACH,CAAC;YACD,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;YACvB,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAxBD,sBAAI,mDAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAC/B,CAAC;;;OAAA;IAwBD,kDAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IA/BU,4BAA4B;QAbxC,SAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,IAAI,EAAE;gBACJ,KAAK,EAAE,mCAAmC;aAC3C;YACD,QAAQ,EAAE,8MAKT;SACF,CAAC;yCAU4B,eAAe,EAAc,iBAAiB,EAAqB,QAAQ,EAAY,UAAU;OATlH,4BAA4B,CAgCxC;IAAD,mCAAC;CAAA,AAhCD,IAgCC;SAhCY,4BAA4B","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer } from '@angular/core';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\n\r\n@Component({\r\n  selector: 'bs-dropdown-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    style: 'display:block;position: absolute;'\r\n  },\r\n  template: `\r\n    <div [class.dropup]=\"direction === 'up'\"\r\n         [class.dropdown]=\"direction === 'down'\"\r\n         [class.show]=\"isOpen\"\r\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\r\n  `\r\n})\r\nexport class BsDropdownContainerComponent implements OnDestroy {\r\n  isOpen = false;\r\n\r\n  get direction(): 'down' | 'up' {\r\n    return this._state.direction;\r\n  }\r\n\r\n  private _subscription: any;\r\n\r\n  constructor(private _state: BsDropdownState, private cd: ChangeDetectorRef, private _renderer: Renderer, _element: ElementRef) {\r\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\r\n      this.isOpen = value;\r\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\r\n      if (dropdown) {\r\n        this._renderer.setElementClass(dropdown, 'show', true);\r\n        if (dropdown.classList.contains('dropdown-menu-right')) {\r\n          this._renderer.setElementStyle(dropdown, 'left', 'auto');\r\n          this._renderer.setElementStyle(dropdown, 'right', '0');\r\n        }\r\n        if (this.direction === 'up') {\r\n          this._renderer.setElementStyle(dropdown, 'top', 'auto');\r\n          this._renderer.setElementStyle(dropdown, 'transform', 'translateY(-101%)');\r\n        }\r\n      }\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}