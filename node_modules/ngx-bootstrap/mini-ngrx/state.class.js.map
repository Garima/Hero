{"version":3,"file":"state.class.js","sourceRoot":"","sources":["../../.tmp/mini-ngrx/state.class.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAGvD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C;IAAkC,6BAAkB;IAClD,mBAAY,aAAgB,EAAE,kBAAsC,EAAE,OAAyB;QAA/F,YACE,kBAAM,aAAa,CAAC,SAYrB;QAVC,IAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACjE,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,KAAQ,EAAE,MAAc;YAChE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAED,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAChC,CAAC,EAAE,aAAa,CAAC,CAAC;QAElB,MAAM,CAAC,SAAS,CAAC,UAAC,KAAQ,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAhB,CAAgB,CAAC,CAAC;;IACnD,CAAC;IACH,gBAAC;AAAD,CAAC,AAfD,CAAkC,eAAe,GAehD","sourcesContent":["/**\r\n * @copyright ngrx\r\n */\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Action, ActionReducer } from './index';\r\nimport { observeOn } from 'rxjs/operator/observeOn';\r\nimport { queue } from 'rxjs/scheduler/queue';\r\nimport { scan } from 'rxjs/operator/scan';\r\n\r\nexport class MiniState<T> extends BehaviorSubject<T> {\r\n  constructor(_initialState: T, actionsDispatcher$: Observable<Action>, reducer: ActionReducer<T>) {\r\n    super(_initialState);\r\n\r\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\r\n    const state$ = scan.call(actionInQueue$, (state: T, action: Action) => {\r\n      if (!action) {\r\n        return state;\r\n      }\r\n\r\n      return reducer(state, action);\r\n    }, _initialState);\r\n\r\n    state$.subscribe((value: T) => this.next(value));\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}