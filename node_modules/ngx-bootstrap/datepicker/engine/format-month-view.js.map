{"version":3,"file":"format-month-view.js","sourceRoot":"","sources":["../../../.tmp/datepicker/engine/format-month-view.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AAEnE,MAAM,0BAA0B,YAA+B,EAC/B,aAAsC,EACtC,UAAkB;IAChD,MAAM,CAAC;QACL,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC;QAC1F,SAAS,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;QACxF,WAAW,EAAE,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,MAAM,CAAC;QACrG,QAAQ,EAAE,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,aAAa,EAAc;QACrE,KAAK,EAAE,YAAY,CAAC,UAAU;aAC3B,GAAG,CAAC,UAAC,IAAY,EAAE,SAAiB,IAAK,OAAA,CAAC;YACvC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,UAAC,IAAU,EAAE,QAAgB,IAAK,OAAA,CAAC;gBAChD,IAAI,MAAA;gBACJ,KAAK,EAAE,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC;gBACrE,UAAU,YAAA,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA;aAChC,CAAC,EAJ+C,CAI/C,CAAC;SACJ,CAAC,EANsC,CAMtC,CACH;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,yBAAyB,UAAoB,EAAE,MAAc,EAAE,MAAc;IACjF,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,EAAlD,CAAkD,CAAC,CAAC;AAC9F,CAAC","sourcesContent":["import { DatepickerFormatOptions, DaysCalendarModel, MonthViewModel, MonthViewOptions } from '../models/index';\r\nimport { formatDate } from '../../bs-moment/format';\r\nimport { getLocale } from '../../bs-moment/locale/locales.service';\r\n\r\nexport function formatMonthView(daysCalendar: DaysCalendarModel,\r\n                                formatOptions: DatepickerFormatOptions,\r\n                                monthIndex: number): MonthViewModel {\r\n  return {\r\n    month: daysCalendar.month,\r\n    monthTitle: formatDate(daysCalendar.month, formatOptions.monthTitle, formatOptions.locale),\r\n    yearTitle: formatDate(daysCalendar.month, formatOptions.yearTitle, formatOptions.locale),\r\n    weekNumbers: getWeekNumbers(daysCalendar.daysMatrix, formatOptions.weekNumbers, formatOptions.locale),\r\n    weekdays: getLocale(formatOptions.locale).weekdaysShort() as string[],\r\n    weeks: daysCalendar.daysMatrix\r\n      .map((week: Date[], weekIndex: number) => ({\r\n          days: week.map((date: Date, dayIndex: number) => ({\r\n            date,\r\n            label: formatDate(date, formatOptions.dayLabel, formatOptions.locale),\r\n            monthIndex, weekIndex, dayIndex\r\n          }))\r\n        })\r\n      ),\r\n  };\r\n}\r\n\r\nexport function getWeekNumbers(daysMatrix: Date[][], format: string, locale: string): string[] {\r\n  return daysMatrix.map((days: Date[]) => days[0] ? formatDate(days[0], format, locale) : '');\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}