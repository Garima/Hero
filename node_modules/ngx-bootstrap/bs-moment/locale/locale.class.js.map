{"version":3,"file":"locale.class.js","sourceRoot":"","sources":["../../../.tmp/bs-moment/locale/locale.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { weekOfYear } from '../units/week-calendar-utils';\r\nimport { isArray, isFunction } from '../utils/type-checks';\r\nimport { getDayOfWeek, getMonth } from '../utils/date-getters';\r\n\r\nexport interface LocaleOptionsFormat {\r\n  format: string[];\r\n  standalone: string[];\r\n  isFormat: RegExp;\r\n}\r\n\r\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\r\n\r\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\r\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\r\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\r\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\r\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\r\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\r\n\r\nexport interface LocaleData {\r\n  [key: string]: any;\r\n\r\n  invalidDate?: string;\r\n  abbr?: string;\r\n\r\n  months?: LocaleOptions;\r\n  monthsShort?: string[];\r\n  weekdays?: LocaleOptions;\r\n  weekdaysMin?: string[];\r\n  weekdaysShort?: string[];\r\n  week?: { dow: number, doy: number };\r\n\r\n  dayOfMonthOrdinalParse?: RegExp;\r\n  meridiemParse?: RegExp;\r\n\r\n  ordinal?(num: number, token?: string): string;\r\n  postformat?(num: string): string;\r\n}\r\n\r\nexport class Locale {\r\n  [key: string]: any;\r\n  _abbr: string;\r\n  _config: LocaleData;\r\n  invalidDate: string;\r\n\r\n  private _months: LocaleOptions;\r\n  private _monthsShort: LocaleOptions;\r\n\r\n  private _weekdays: LocaleOptions;\r\n  private _weekdaysShort: string[];\r\n  private _weekdaysMin: string[];\r\n  private _week: { dow: number, doy: number };\r\n\r\n  private _ordinal: string;\r\n\r\n  constructor(config: LocaleData) {\r\n    if (!!config) {\r\n      this.set(config);\r\n    }\r\n  }\r\n\r\n  set(config: LocaleData): void {\r\n    for (const i in config) {\r\n      if (!config.hasOwnProperty(i)) {\r\n        continue;\r\n      }\r\n      const prop = (config[i] as any);\r\n      const key = isFunction(prop) ? i : `_${i}`;\r\n      this[key] = prop;\r\n    }\r\n\r\n    this._config = config;\r\n  }\r\n\r\n  // Months\r\n  // LOCALES\r\n  months(date?: Date, format?: string): string | string[] {\r\n    if (!date) {\r\n      return isArray(this._months)\r\n        ? (this._months as string[])\r\n        : (this._months as LocaleOptionsFormat).standalone;\r\n    }\r\n\r\n    if (isArray(this._months)) {\r\n      return (this._months  as string[])[getMonth(date)];\r\n    }\r\n\r\n    const key = ((this._months as LocaleOptionsFormat).isFormat || MONTHS_IN_FORMAT)\r\n      .test(format) ? 'format' : 'standalone';\r\n    return ((this._months as any)[key] as string[])[getMonth(date)];\r\n  }\r\n\r\n  monthsShort(date?: Date, format?: string): string | string[] {\r\n    if (!date) {\r\n      return isArray(this._monthsShort)\r\n        ? (this._monthsShort as string[])\r\n        : (this._monthsShort as LocaleOptionsFormat).standalone;\r\n    }\r\n\r\n    if (isArray(this._monthsShort)) {\r\n      return (this._monthsShort as string[])[getMonth(date)];\r\n    }\r\n    let key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\r\n    return ((this._monthsShort as any)[key] as string[])[getMonth(date)];\r\n  }\r\n\r\n  // Days of week\r\n// LOCALES\r\n\r\n  weekdays(date?: Date, format?: string): string | string[] {\r\n    const _isArray = isArray(this._weekdays as string[]);\r\n    if (!date) {\r\n      return _isArray\r\n        ? this._weekdays as string[]\r\n        : (this._weekdays as LocaleOptionsFormat).standalone;\r\n    }\r\n\r\n    if (_isArray) {\r\n      return (this._weekdays as string[])[getDayOfWeek(date)];\r\n    }\r\n\r\n    const _key = (this._weekdays as LocaleOptionsFormat).isFormat.test(format) ? 'format' : 'standalone';\r\n    return ((this._weekdays as any)[_key] as string[])[getDayOfWeek(date)];\r\n  }\r\n\r\n  weekdaysMin(date?: Date): string | string[] {\r\n    return (date) ? this._weekdaysShort[getDayOfWeek(date)] : this._weekdaysShort;\r\n  }\r\n\r\n  weekdaysShort(date?: Date): string | string[] {\r\n    return (date) ? this._weekdaysMin[getDayOfWeek(date)] : this._weekdaysMin;\r\n  }\r\n\r\n  week(date: Date): number {\r\n    return weekOfYear(date, this._week.dow, this._week.doy).week;\r\n  }\r\n\r\n  firstDayOfWeek(): number {\r\n    return this._week.dow;\r\n  }\r\n\r\n  firstDayOfYear(): number {\r\n    return this._week.doy;\r\n  }\r\n\r\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\r\n    if (hours > 11) {\r\n      return isLower ? 'pm' : 'PM';\r\n    }\r\n\r\n    return isLower ? 'am' : 'AM';\r\n  }\r\n\r\n  ordinal(num: number, token?: string): string {\r\n    return this._ordinal.replace('%d', num.toString(10));\r\n  }\r\n\r\n  postformat(str: string) { return str; }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}